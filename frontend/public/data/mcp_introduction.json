{"extracted_information": "The Model Context Protocol (MCP) is an open protocol designed to standardize how applications provide context to Large Language Models (LLMs). It is described as being analogous to a USB-C port for AI applications, providing a standardized way to connect AI models to various data sources and tools. MCP aims to facilitate building agents and complex workflows on top of LLMs by offering a growing list of pre-built integrations, flexibility to switch between LLM providers, and best practices for securing data within infrastructure. The core concepts highlighted include Architecture, Resources, Prompts, Tools, Sampling, Roots, and Transports, with architecture being a fundamental concept detailing the interaction between components.", "specifications": {}, "pricing": {}, "features": [], "statistics": {}, "temporal_info": {}, "geographical_data": {}, "references": [], "core_concepts": [{"name": "Architecture", "description": "Details how MCP connects clients, servers, and LLMs."}, {"name": "Resources", "description": "Exposes data and content from servers to LLMs."}, {"name": "Prompts", "description": "Enables creation of reusable prompt templates and workflows."}, {"name": "Tools", "description": "Allows LLMs to perform actions through the server."}, {"name": "Sampling", "description": "Lets servers request completions from LLMs."}, {"name": "Transports", "description": "Refers to MCP's communication mechanism."}], "how_servers_work": "MCP Servers are lightweight programs that each expose specific capabilities through the standardized Model Context Protocol. They can securely access Local Data Sources (like computer files, databases, and services) and connect to Remote Services (external systems over the internet like APIs) to provide data and tools to MCP Hosts via MCP Clients.", "basic_architecture": {"type": "client-server architecture", "description": "A host application connects to multiple servers.", "components": [{"name": "MCP Hosts", "role": "Programs like Claude Desktop, IDEs, or AI tools that want to access data through MCP."}, {"name": "MCP Clients", "role": "Protocol clients that maintain 1:1 connections with servers."}, {"name": "MCP Servers", "role": "Lightweight programs that each expose specific capabilities through the standardized Model Context Protocol."}, {"name": "Local Data Sources", "role": "Your computerâ€™s files, databases, and services that MCP servers can securely access."}, {"name": "Remote Services", "role": "External systems available over the internet (e.g., through APIs) that MCP servers can connect to."}]}}