{"extracted_information": "This document provides security considerations and best practices for Model Context Protocol (MCP) implementations, complementing the MCP Authorization specification. It identifies specific security risks and attack vectors relevant to MCP servers, particularly when acting as proxies, and offers detailed mitigation strategies.\n\nKey security concerns addressed:\n\n1.  **Confused Deputy Problem:** This occurs when an MCP proxy server uses a static client ID to interact with a third-party authorization server that lacks dynamic client registration support. Attackers can exploit this by crafting malicious authorization requests with dynamic client IDs and redirect URIs pointing to their servers. If the user's browser has a consent cookie from a previous legitimate interaction, the third-party authorization server might skip the consent screen, redirecting the MCP authorization code to the attacker's server.\n    *   **Mitigation:** MCP proxy servers using static client IDs MUST obtain explicit user consent for each dynamically registered client before initiating authorization flows with third-party authorization servers, even if the third-party server might require additional consent.\n\n2.  **Token Passthrough Anti-Pattern:** This involves an MCP server accepting tokens from an MCP client and using them to access downstream APIs without properly validating that the tokens were specifically issued for the MCP server's audience or recipient. This practice is explicitly forbidden by the MCP authorization specification.\n    *   **Risks:** Circumvents security controls (rate limiting, validation, monitoring) on the MCP server or downstream APIs; creates accountability and audit trail issues (difficulty identifying the true client source); allows attackers with stolen tokens to use the MCP server as a proxy for data exfiltration if claims are not validated; breaks trust boundaries expected by downstream resource servers; creates future compatibility risks for adding security controls.\n    *   **Mitigation:** MCP servers **MUST NOT** accept any tokens that were not explicitly issued for the MCP server (i.e., they must validate the token's audience or recipient claim matches the MCP server).\n\nThe document emphasizes reading these practices alongside the MCP Authorization specification and OAuth 2.0 security best practices (RFC 9700).", "specifications": {}, "pricing": {}, "features": [], "statistics": {}, "temporal_info": {}, "geographical_data": {}, "references": ["MCP Authorization specification", "OAuth 2.0 security best practices (RFC 9700)", "Confused deputy problem (Wikipedia)"]}